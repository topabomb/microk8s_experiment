#使用缓存重用node_modules与dist
cache:
  paths:
    - chapter02/backend-app/node_modules
    - chapter02/backend-app/dist
#安装与编译
build-chapter02/backend-app: 
  stage: build
  script:
    - echo "Compiling the code..."
    - cd chapter02/backend-app/
    - npm install --silent
    - npm run build
#执行单元测试
unit-test-chapter02/backend-app: 
  image:
      name: bitnami/kubectl:latest
      entrypoint: ['']
  stage: test 
  script:
    - echo "Running unit tests..."
    - kubectl config get-contexts
    - kubectl config use-context topabomb/microk8s_experiment:microk8s
    - kubectl config view
    - kubectl get pods --insecure-skip-tls-verify

#development部署，使用docker kaniko镜像进行打包，参考 https://docs.gitlab.com/ee/ci/docker/using_kaniko.html
deploy-build-chapter02-development: 
  stage: deploy 
  image:
    # name: gcr.io/kaniko-project/executor:v1.9.0-debug
    name: topabomb/kaniko-executor:v1.9.0-debug
    entrypoint: [""]
  variables:
    REGISTRY_URL: 172.18.72.18:32000
    IMAGE_TAG: ${CI_COMMIT_BRANCH}_${CI_COMMIT_SHORT_SHA}_${CI_PIPELINE_ID}
  script:
    - echo "Deploying chapter02/backend-app application to development..."
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/chapter02/backend-app"
      --dockerfile "${CI_PROJECT_DIR}/chapter02/backend-app/Dockerfile"
      --destination "${REGISTRY_URL}/backend-app:${IMAGE_TAG}" #--destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
    - kubectl config get-contexts
    - kubectl config use-context topabomb/microk8s_experiment:microk8s
    - kubectl get pods --insecure-skip-tls-verify
    - npm run deploy:dev
apply-build-chapter02-k8s: 
  image:
      name: bitnami/kubectl:latest
      entrypoint: ['']
  stage: apply 
  script:
    - kubectl config get-contexts
    - kubectl config use-context topabomb/microk8s_experiment:microk8s
    - kubectl config view
    - kubectl get pods --insecure-skip-tls-verify
    - npm run deploy:dev
